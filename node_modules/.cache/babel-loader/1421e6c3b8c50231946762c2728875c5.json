{"ast":null,"code":"// TODO 2.a - Setup beacon wallet instance\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\nexport const wallet = new BeaconWallet({\n  name: \"Mini project 2\",\n  preferredNetwork: \"limanet\"\n});\nexport const connectWallet = async () => {\n  await wallet.requestPermissions({\n    network: {\n      type: \"ghostnet\"\n    }\n  });\n};\nexport const getAccount = async () => {\n  const activeAccount = await wallet.client.getActiveAccount();\n  if (activeAccount) {\n    return activeAccount.address;\n  } else {\n    return \"\";\n  }\n};","map":{"version":3,"names":["BeaconWallet","wallet","name","preferredNetwork","connectWallet","requestPermissions","network","type","getAccount","activeAccount","client","getActiveAccount","address"],"sources":["C:/Users/akira/Desktop/miniproj2/src/utils/wallet.js"],"sourcesContent":["// TODO 2.a - Setup beacon wallet instance\r\nimport { BeaconWallet } from \"@taquito/beacon-wallet\";\r\n\r\nexport const wallet = new BeaconWallet({\r\n  name: \"Mini project 2\",\r\n  preferredNetwork: \"limanet\",\r\n});\r\n\r\nexport const connectWallet = async () => {\r\n  await wallet.requestPermissions({ network: { type: \"ghostnet\" } });\r\n};\r\n\r\nexport const getAccount = async () => {\r\n  const activeAccount = await wallet.client.getActiveAccount();\r\n  if (activeAccount) {\r\n    return activeAccount.address;\r\n  } else {\r\n    return \"\";\r\n  }\r\n};\r\n"],"mappings":"AAAA;AACA,SAASA,YAAY,QAAQ,wBAAwB;AAErD,OAAO,MAAMC,MAAM,GAAG,IAAID,YAAY,CAAC;EACrCE,IAAI,EAAE,gBAAgB;EACtBC,gBAAgB,EAAE;AACpB,CAAC,CAAC;AAEF,OAAO,MAAMC,aAAa,GAAG,MAAAA,CAAA,KAAY;EACvC,MAAMH,MAAM,CAACI,kBAAkB,CAAC;IAAEC,OAAO,EAAE;MAAEC,IAAI,EAAE;IAAW;EAAE,CAAC,CAAC;AACpE,CAAC;AAED,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAY;EACpC,MAAMC,aAAa,GAAG,MAAMR,MAAM,CAACS,MAAM,CAACC,gBAAgB,EAAE;EAC5D,IAAIF,aAAa,EAAE;IACjB,OAAOA,aAAa,CAACG,OAAO;EAC9B,CAAC,MAAM;IACL,OAAO,EAAE;EACX;AACF,CAAC"},"metadata":{},"sourceType":"module"}