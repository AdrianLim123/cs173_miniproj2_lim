{"ast":null,"code":"import { tezos } from \"./tezos\";\nexport const claimOwner = async () => {\n  try {\n    const contractInstance = await tezos.wallet.at(\"KT1HeQbzgEqKgrdbU7tBPfQoAJffaF9ZCyKX\");\n    const op = await contractInstance.methods.claimOwner().send();\n    await op.confirmation(1);\n  } catch (err) {\n    throw err;\n  }\n};\nexport const claimCP = async hashSecret => {\n  try {\n    const contractInstance = await tezos.wallet.at(\"KT1HeQbzgEqKgrdbU7tBPfQoAJffaF9ZCyKX\");\n    const op = await contractInstance.methods.claimCounterparty({\n      secret: hashSecret\n    }).send();\n    await op.confirmation(1);\n  } catch (err) {\n    throw err;\n  }\n};\nexport const setBalanceOwnerEscrow = async fromOwner => {\n  try {\n    // Create Escrow instance\n    const contractInstance = await tezos.wallet.at(\"KT1HeQbzgEqKgrdbU7tBPfQoAJffaF9ZCyKX\");\n    // Add balance of cp and owner\n    const op = await contractInstance.methods.addBalanceOwner().send({\n      amount: fromOwner,\n      mutez: true\n    });\n    await op.confirmation(1);\n    alert(\"Transaction successful.\");\n  } catch (err) {\n    throw err;\n  }\n};\nexport const setBalanceCPEscrow = async fromCP => {\n  try {\n    // Create Escrow instance\n    const contractInstance = await tezos.wallet.at(\"KT1HeQbzgEqKgrdbU7tBPfQoAJffaF9ZCyKX\");\n    // Add balance of cp and owner\n    const op = await contractInstance.methods.addBalanceCounterparty().send({\n      amount: fromCP,\n      mutez: true\n    });\n    await op.confirmation(1);\n  } catch (err) {\n    throw err;\n  }\n};","map":{"version":3,"names":["tezos","claimOwner","contractInstance","wallet","at","op","methods","send","confirmation","err","claimCP","hashSecret","claimCounterparty","secret","setBalanceOwnerEscrow","fromOwner","addBalanceOwner","amount","mutez","alert","setBalanceCPEscrow","fromCP","addBalanceCounterparty"],"sources":["C:/Users/akira/Desktop/miniproj2/src/utils/operation.js"],"sourcesContent":["import { tezos } from \"./tezos\";\r\n\r\nexport const claimOwner = async() => {\r\n  try{\r\n    const contractInstance = await tezos.wallet.at(\"KT1HeQbzgEqKgrdbU7tBPfQoAJffaF9ZCyKX\");\r\n    const op = await contractInstance.methods.claimOwner().send();\r\n    await op.confirmation(1);\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n}\r\n\r\nexport const claimCP = async(hashSecret) => {\r\n  try{\r\n    const contractInstance = await tezos.wallet.at(\"KT1HeQbzgEqKgrdbU7tBPfQoAJffaF9ZCyKX\");\r\n    const op = await contractInstance.methods.claimCounterparty({secret: hashSecret}).send();\r\n    await op.confirmation(1);\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n}\r\n\r\nexport const setBalanceOwnerEscrow = async (fromOwner) => {\r\n  try{\r\n    // Create Escrow instance\r\n    const contractInstance = await tezos.wallet.at(\"KT1HeQbzgEqKgrdbU7tBPfQoAJffaF9ZCyKX\");\r\n    // Add balance of cp and owner\r\n    const op = await contractInstance.methods.addBalanceOwner().send({\r\n      amount: fromOwner,\r\n      mutez: true\r\n    });\r\n    await op.confirmation(1);\r\n    alert(\"Transaction successful.\");\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const setBalanceCPEscrow = async (fromCP) => {\r\n  try{\r\n    // Create Escrow instance\r\n    const contractInstance = await tezos.wallet.at(\"KT1HeQbzgEqKgrdbU7tBPfQoAJffaF9ZCyKX\");\r\n    // Add balance of cp and owner\r\n    const op = await contractInstance.methods.addBalanceCounterparty().send({\r\n      amount: fromCP,\r\n      mutez: true,\r\n    });\r\n    await op.confirmation(1);\r\n\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,SAAS;AAE/B,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAW;EACnC,IAAG;IACD,MAAMC,gBAAgB,GAAG,MAAMF,KAAK,CAACG,MAAM,CAACC,EAAE,CAAC,sCAAsC,CAAC;IACtF,MAAMC,EAAE,GAAG,MAAMH,gBAAgB,CAACI,OAAO,CAACL,UAAU,EAAE,CAACM,IAAI,EAAE;IAC7D,MAAMF,EAAE,CAACG,YAAY,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,MAAMA,GAAG;EACX;AACF,CAAC;AAED,OAAO,MAAMC,OAAO,GAAG,MAAMC,UAAU,IAAK;EAC1C,IAAG;IACD,MAAMT,gBAAgB,GAAG,MAAMF,KAAK,CAACG,MAAM,CAACC,EAAE,CAAC,sCAAsC,CAAC;IACtF,MAAMC,EAAE,GAAG,MAAMH,gBAAgB,CAACI,OAAO,CAACM,iBAAiB,CAAC;MAACC,MAAM,EAAEF;IAAU,CAAC,CAAC,CAACJ,IAAI,EAAE;IACxF,MAAMF,EAAE,CAACG,YAAY,CAAC,CAAC,CAAC;EAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,MAAMA,GAAG;EACX;AACF,CAAC;AAED,OAAO,MAAMK,qBAAqB,GAAG,MAAOC,SAAS,IAAK;EACxD,IAAG;IACD;IACA,MAAMb,gBAAgB,GAAG,MAAMF,KAAK,CAACG,MAAM,CAACC,EAAE,CAAC,sCAAsC,CAAC;IACtF;IACA,MAAMC,EAAE,GAAG,MAAMH,gBAAgB,CAACI,OAAO,CAACU,eAAe,EAAE,CAACT,IAAI,CAAC;MAC/DU,MAAM,EAAEF,SAAS;MACjBG,KAAK,EAAE;IACT,CAAC,CAAC;IACF,MAAMb,EAAE,CAACG,YAAY,CAAC,CAAC,CAAC;IACxBW,KAAK,CAAC,yBAAyB,CAAC;EAClC,CAAC,CAAC,OAAOV,GAAG,EAAE;IACZ,MAAMA,GAAG;EACX;AACF,CAAC;AAED,OAAO,MAAMW,kBAAkB,GAAG,MAAOC,MAAM,IAAK;EAClD,IAAG;IACD;IACA,MAAMnB,gBAAgB,GAAG,MAAMF,KAAK,CAACG,MAAM,CAACC,EAAE,CAAC,sCAAsC,CAAC;IACtF;IACA,MAAMC,EAAE,GAAG,MAAMH,gBAAgB,CAACI,OAAO,CAACgB,sBAAsB,EAAE,CAACf,IAAI,CAAC;MACtEU,MAAM,EAAEI,MAAM;MACdH,KAAK,EAAE;IACT,CAAC,CAAC;IACF,MAAMb,EAAE,CAACG,YAAY,CAAC,CAAC,CAAC;EAE1B,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,MAAMA,GAAG;EACX;AACF,CAAC"},"metadata":{},"sourceType":"module"}