{"ast":null,"code":"/* eslint-disable @typescript-eslint/no-explicit-any */\n/* eslint-disable no-console */\nimport { getDebugEnabled } from '../debug';\n// Code taken from https://www.bennadel.com/blog/3941-styling-console-log-output-formatting-with-css.htm\n// const echo = (() => {\n//   let queue: any[] = []\n//   const ECHO_TOKEN = {}\n//   const RESET_INPUT = '%c '\n//   const RESET_CSS = ''\n//   // Attach formatting utility method.\n//   function alertFormatting(value: any): any {\n//     queue.push({\n//       value: value,\n//       css:\n//         'display: inline-block ; background-color: #e0005a ; color: #ffffff ; font-weight: bold ; padding: 3px 7px 3px 7px ; border-radius: 3px 3px 3px 3px ;'\n//     })\n//     return ECHO_TOKEN\n//   }\n//   // Attach formatting utility method.\n//   function warningFormatting(value: any): any {\n//     queue.push({\n//       value: value,\n//       css:\n//         'display: inline-block ; background-color: gold ; color: black ; font-weight: bold ; padding: 3px 7px 3px 7px ; border-radius: 3px 3px 3px 3px ;'\n//     })\n//     return ECHO_TOKEN\n//   }\n//   // I provide an echo-based proxy to the given Console Function. This uses an\n//   // internal queue to aggregate values before calling the given Console\n//   // Function with the desired formatting.\n//   function using(consoleFunction: any): any {\n//     function consoleFunctionProxy() {\n//       // As we loop over the arguments, we're going to aggregate a set of\n//       // inputs and modifiers. The Inputs will ultimately be collapsed down\n//       // into a single string that acts as the first console.log parameter\n//       // while the modifiers are then SPREAD into console.log as 2...N.\n//       // --\n//       // NOTE: After each input/modifier pair, I'm adding a RESET pairing.\n//       // This implicitly resets the CSS after every formatted pairing.\n//       var inputs = []\n//       var modifiers = []\n//       for (var i = 0; i < arguments.length; i++) {\n//         // When the formatting utility methods are called, they return\n//         // a special token. This indicates that we should pull the\n//         // corresponding value out of the QUEUE instead of trying to\n//         // output the given argument directly.\n//         if (arguments[i] === ECHO_TOKEN) {\n//           var item = queue.shift()\n//           inputs.push('%c' + item.value, RESET_INPUT)\n//           modifiers.push(item.css, RESET_CSS)\n//           // For every other argument type, output the value directly.\n//         } else {\n//           var arg = arguments[i]\n//           if (typeof arg === 'object' || typeof arg === 'function') {\n//             inputs.push('%o', RESET_INPUT)\n//             modifiers.push(arg, RESET_CSS)\n//           } else {\n//             inputs.push('%c' + arg, RESET_INPUT)\n//             modifiers.push(RESET_CSS, RESET_CSS)\n//           }\n//         }\n//       }\n//       consoleFunction(inputs.join(''), ...modifiers)\n//       // Once we output the aggregated value, reset the queue. This should have\n//       // already been emptied by the .shift() calls; but the explicit reset\n//       // here acts as both a marker of intention as well as a fail-safe.\n//       queue = []\n//     }\n//     return consoleFunctionProxy\n//   }\n//   return {\n//     // Console(ish) functions.\n//     log: using(console.log),\n//     warn: using(console.warn),\n//     error: using(console.error),\n//     trace: using(console.trace),\n//     group: using(console.group),\n//     groupEnd: using(console.groupEnd),\n//     // Formatting functions.\n//     asAlert: alertFormatting,\n//     asWarning: warningFormatting\n//   }\n// })()\n/**\n * The logger that is used internally\n */\nexport class Logger {\n  constructor(service) {\n    this.name = service;\n  }\n  debug(method) {\n    for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n    this._log('debug', method, args);\n  }\n  log(method) {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n    this._log('log', method, args);\n  }\n  warn(method) {\n    for (var _len3 = arguments.length, args = new Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n      args[_key3 - 1] = arguments[_key3];\n    }\n    this._log('warn', method, args);\n  }\n  error(method) {\n    for (var _len4 = arguments.length, args = new Array(_len4 > 1 ? _len4 - 1 : 0), _key4 = 1; _key4 < _len4; _key4++) {\n      args[_key4 - 1] = arguments[_key4];\n    }\n    this._log('error', method, args);\n  }\n  _log(type, method) {\n    let args = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n    if (!getDebugEnabled()) {\n      return;\n    }\n    let groupText = `[BEACON] ${new Date().toISOString()} [${this.name}](${method})`;\n    let data = args;\n    if (args[0] && typeof args[0] === 'string') {\n      groupText += ` ${args[0]}`;\n      data = args.slice(1);\n    }\n    switch (type) {\n      case 'error':\n        console.group(groupText);\n        console.error(...data);\n        break;\n      case 'warn':\n        console.group(groupText);\n        console.warn(...data);\n        break;\n      case 'debug':\n        console.groupCollapsed(groupText);\n        console.debug(...data);\n        break;\n      default:\n        console.group(groupText);\n        console.log(...data);\n    }\n    console.groupEnd();\n    // echo.group(echo.asWarning(`[BEACON] ${message}`))\n    // echo.log(echo.asWarning(`[${this.name}]`), echo.asAlert(`(${method})`), ...args)\n    // echo.groupEnd()\n  }\n}","map":{"version":3,"names":["getDebugEnabled","Logger","constructor","service","name","debug","method","_len","arguments","length","args","Array","_key","_log","log","_len2","_key2","warn","_len3","_key3","error","_len4","_key4","type","undefined","groupText","Date","toISOString","data","slice","console","group","groupCollapsed","groupEnd"],"sources":["../../../src/utils/Logger.ts"],"sourcesContent":[null],"mappings":"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"},"metadata":{},"sourceType":"module"}