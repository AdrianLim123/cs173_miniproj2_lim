{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nimport { ready, crypto_generichash } from 'libsodium-wrappers';\nimport * as bs58check from 'bs58check';\n/**\n * @internalapi\n *\n * Generate a deterministic account identifier based on an address and a network\n *\n * @param address\n * @param network\n */\nexport const getAccountIdentifier = (address, network) => __awaiter(void 0, void 0, void 0, function* () {\n  const data = [address, network.type];\n  if (network.name) {\n    data.push(`name:${network.name}`);\n  }\n  if (network.rpcUrl) {\n    data.push(`rpc:${network.rpcUrl}`);\n  }\n  yield ready;\n  const buffer = Buffer.from(crypto_generichash(10, data.join('-')));\n  return bs58check.encode(buffer);\n});","map":{"version":3,"names":["ready","crypto_generichash","bs58check","getAccountIdentifier","address","network","__awaiter","data","type","name","push","rpcUrl","buffer","Buffer","from","join","encode"],"sources":["../../../src/utils/get-account-identifier.ts"],"sourcesContent":[null],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAASA,KAAK,EAAEC,kBAAkB,QAAQ,oBAAoB;AAC9D,OAAO,KAAKC,SAAS,MAAM,WAAW;AAGtC;;;;;;;;AAQA,OAAO,MAAMC,oBAAoB,GAAGA,CAAOC,OAAe,EAAEC,OAAgB,KAAqBC,SAAA;EAC/F,MAAMC,IAAI,GAAa,CAACH,OAAO,EAAEC,OAAO,CAACG,IAAI,CAAC;EAC9C,IAAIH,OAAO,CAACI,IAAI,EAAE;IAChBF,IAAI,CAACG,IAAI,CAAC,QAAQL,OAAO,CAACI,IAAI,EAAE,CAAC;;EAEnC,IAAIJ,OAAO,CAACM,MAAM,EAAE;IAClBJ,IAAI,CAACG,IAAI,CAAC,OAAOL,OAAO,CAACM,MAAM,EAAE,CAAC;;EAGpC,MAAMX,KAAK;EAEX,MAAMY,MAAM,GAAGC,MAAM,CAACC,IAAI,CAACb,kBAAkB,CAAC,EAAE,EAAEM,IAAI,CAACQ,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC;EAElE,OAAOb,SAAS,CAACc,MAAM,CAACJ,MAAM,CAAC;AACjC,CAAC"},"metadata":{},"sourceType":"module"}