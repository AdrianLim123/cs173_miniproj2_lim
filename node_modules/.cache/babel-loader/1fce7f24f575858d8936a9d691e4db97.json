{"ast":null,"code":"import { tezos } from \"./tezos\";\nexport const claimOwner = async () => {\n  try {\n    const contractInstance = await tezos.wallet.at(\"KT1HeQbzgEqKgrdbU7tBPfQoAJffaF9ZCyKX\");\n  } catch (err) {}\n};\nexport const setBalanceOwnerEscrow = async fromOwner => {\n  try {\n    // Create Escrow instance\n    const contractInstance = await tezos.wallet.at(\"KT1HeQbzgEqKgrdbU7tBPfQoAJffaF9ZCyKX\");\n    // Add balance of cp and owner\n    const op = await contractInstance.methods.addBalanceOwner().send({\n      amount: fromOwner,\n      mutez: true\n    });\n    await op.confirmation(1);\n    alert(\"Transaction successful.\");\n  } catch (err) {\n    throw err;\n  }\n};\nexport const setBalanceCPEscrow = async fromCP => {\n  try {\n    // Create Escrow instance\n    const contractInstance = await tezos.wallet.at(\"KT1HeQbzgEqKgrdbU7tBPfQoAJffaF9ZCyKX\");\n    // Add balance of cp and owner\n    const op = await contractInstance.methods.addBalanceCounterparty().send({\n      amount: fromCP,\n      mutez: true\n    });\n    await op.confirmation(1);\n  } catch (err) {\n    throw err;\n  }\n};","map":{"version":3,"names":["tezos","claimOwner","contractInstance","wallet","at","err","setBalanceOwnerEscrow","fromOwner","op","methods","addBalanceOwner","send","amount","mutez","confirmation","alert","setBalanceCPEscrow","fromCP","addBalanceCounterparty"],"sources":["C:/Users/akira/Desktop/miniproj2/src/utils/operation.js"],"sourcesContent":["import { tezos } from \"./tezos\";\r\n\r\nexport const claimOwner = async() => {\r\n  try{\r\n    const contractInstance = await tezos.wallet.at(\"KT1HeQbzgEqKgrdbU7tBPfQoAJffaF9ZCyKX\");\r\n  } catch (err) {\r\n\r\n  }\r\n}\r\nexport const setBalanceOwnerEscrow = async (fromOwner) => {\r\n  try{\r\n    // Create Escrow instance\r\n    const contractInstance = await tezos.wallet.at(\"KT1HeQbzgEqKgrdbU7tBPfQoAJffaF9ZCyKX\");\r\n    // Add balance of cp and owner\r\n    const op = await contractInstance.methods.addBalanceOwner().send({\r\n      amount: fromOwner,\r\n      mutez: true\r\n    });\r\n    await op.confirmation(1);\r\n    alert(\"Transaction successful.\");\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const setBalanceCPEscrow = async (fromCP) => {\r\n  try{\r\n    // Create Escrow instance\r\n    const contractInstance = await tezos.wallet.at(\"KT1HeQbzgEqKgrdbU7tBPfQoAJffaF9ZCyKX\");\r\n    // Add balance of cp and owner\r\n    const op = await contractInstance.methods.addBalanceCounterparty().send({\r\n      amount: fromCP,\r\n      mutez: true,\r\n    });\r\n    await op.confirmation(1);\r\n\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,SAAS;AAE/B,OAAO,MAAMC,UAAU,GAAG,MAAAA,CAAA,KAAW;EACnC,IAAG;IACD,MAAMC,gBAAgB,GAAG,MAAMF,KAAK,CAACG,MAAM,CAACC,EAAE,CAAC,sCAAsC,CAAC;EACxF,CAAC,CAAC,OAAOC,GAAG,EAAE,CAEd;AACF,CAAC;AACD,OAAO,MAAMC,qBAAqB,GAAG,MAAOC,SAAS,IAAK;EACxD,IAAG;IACD;IACA,MAAML,gBAAgB,GAAG,MAAMF,KAAK,CAACG,MAAM,CAACC,EAAE,CAAC,sCAAsC,CAAC;IACtF;IACA,MAAMI,EAAE,GAAG,MAAMN,gBAAgB,CAACO,OAAO,CAACC,eAAe,EAAE,CAACC,IAAI,CAAC;MAC/DC,MAAM,EAAEL,SAAS;MACjBM,KAAK,EAAE;IACT,CAAC,CAAC;IACF,MAAML,EAAE,CAACM,YAAY,CAAC,CAAC,CAAC;IACxBC,KAAK,CAAC,yBAAyB,CAAC;EAClC,CAAC,CAAC,OAAOV,GAAG,EAAE;IACZ,MAAMA,GAAG;EACX;AACF,CAAC;AAED,OAAO,MAAMW,kBAAkB,GAAG,MAAOC,MAAM,IAAK;EAClD,IAAG;IACD;IACA,MAAMf,gBAAgB,GAAG,MAAMF,KAAK,CAACG,MAAM,CAACC,EAAE,CAAC,sCAAsC,CAAC;IACtF;IACA,MAAMI,EAAE,GAAG,MAAMN,gBAAgB,CAACO,OAAO,CAACS,sBAAsB,EAAE,CAACP,IAAI,CAAC;MACtEC,MAAM,EAAEK,MAAM;MACdJ,KAAK,EAAE;IACT,CAAC,CAAC;IACF,MAAML,EAAE,CAACM,YAAY,CAAC,CAAC,CAAC;EAE1B,CAAC,CAAC,OAAOT,GAAG,EAAE;IACZ,MAAMA,GAAG;EACX;AACF,CAAC"},"metadata":{},"sourceType":"module"}