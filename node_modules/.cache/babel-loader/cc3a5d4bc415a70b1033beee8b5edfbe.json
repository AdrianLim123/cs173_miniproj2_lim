{"ast":null,"code":"import { tezos } from \"./tezos\";\nexport const setBalanceOwnerEscrow = async fromOwner => {\n  try {\n    // Create Escrow instance\n    const contractInstance = await tezos.wallet.at(\"KT1HeQbzgEqKgrdbU7tBPfQoAJffaF9ZCyKX\");\n    // Add balance of cp and owner\n    const op = await contractInstance.methods.addBalanceOwner().send({\n      amount: fromOwner,\n      mutez: true\n    });\n    await op.confirmation(1);\n    const storage = await fetchStorage();\n    setBalanceOwner(storage.balanceOwner);\n    setBalanceCP(storage.balanceCounterparty);\n    alert(\"Transaction successful.\");\n  } catch (err) {\n    throw err;\n  }\n};\nexport const setBalanceCPEscrow = async fromCP => {\n  try {\n    // Create Escrow instance\n    const contractInstance = await tezos.wallet.at(\"KT1HeQbzgEqKgrdbU7tBPfQoAJffaF9ZCyKX\");\n    // Add balance of cp and owner\n    const op = await contractInstance.methods.addBalanceCounterparty().send({\n      amount: fromCP,\n      mutez: true\n    });\n    await op.confirmation(1);\n  } catch (err) {\n    throw err;\n  }\n};","map":{"version":3,"names":["tezos","setBalanceOwnerEscrow","fromOwner","contractInstance","wallet","at","op","methods","addBalanceOwner","send","amount","mutez","confirmation","storage","fetchStorage","setBalanceOwner","balanceOwner","setBalanceCP","balanceCounterparty","alert","err","setBalanceCPEscrow","fromCP","addBalanceCounterparty"],"sources":["C:/Users/akira/Desktop/miniproj2/src/utils/operation.js"],"sourcesContent":["import { tezos } from \"./tezos\";\r\n\r\nexport const setBalanceOwnerEscrow = async (fromOwner) => {\r\n  try{\r\n    // Create Escrow instance\r\n    const contractInstance = await tezos.wallet.at(\"KT1HeQbzgEqKgrdbU7tBPfQoAJffaF9ZCyKX\");\r\n    // Add balance of cp and owner\r\n    const op = await contractInstance.methods.addBalanceOwner().send({\r\n      amount: fromOwner,\r\n      mutez: true\r\n    });\r\n    await op.confirmation(1);\r\n    const storage = await fetchStorage();\r\n    setBalanceOwner(storage.balanceOwner)\r\n    setBalanceCP(storage.balanceCounterparty);\r\n    alert(\"Transaction successful.\");\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n\r\nexport const setBalanceCPEscrow = async (fromCP) => {\r\n  try{\r\n    // Create Escrow instance\r\n    const contractInstance = await tezos.wallet.at(\"KT1HeQbzgEqKgrdbU7tBPfQoAJffaF9ZCyKX\");\r\n    // Add balance of cp and owner\r\n    const op = await contractInstance.methods.addBalanceCounterparty().send({\r\n      amount: fromCP,\r\n      mutez: true,\r\n    });\r\n    await op.confirmation(1);\r\n\r\n  } catch (err) {\r\n    throw err;\r\n  }\r\n};\r\n"],"mappings":"AAAA,SAASA,KAAK,QAAQ,SAAS;AAE/B,OAAO,MAAMC,qBAAqB,GAAG,MAAOC,SAAS,IAAK;EACxD,IAAG;IACD;IACA,MAAMC,gBAAgB,GAAG,MAAMH,KAAK,CAACI,MAAM,CAACC,EAAE,CAAC,sCAAsC,CAAC;IACtF;IACA,MAAMC,EAAE,GAAG,MAAMH,gBAAgB,CAACI,OAAO,CAACC,eAAe,EAAE,CAACC,IAAI,CAAC;MAC/DC,MAAM,EAAER,SAAS;MACjBS,KAAK,EAAE;IACT,CAAC,CAAC;IACF,MAAML,EAAE,CAACM,YAAY,CAAC,CAAC,CAAC;IACxB,MAAMC,OAAO,GAAG,MAAMC,YAAY,EAAE;IACpCC,eAAe,CAACF,OAAO,CAACG,YAAY,CAAC;IACrCC,YAAY,CAACJ,OAAO,CAACK,mBAAmB,CAAC;IACzCC,KAAK,CAAC,yBAAyB,CAAC;EAClC,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZ,MAAMA,GAAG;EACX;AACF,CAAC;AAED,OAAO,MAAMC,kBAAkB,GAAG,MAAOC,MAAM,IAAK;EAClD,IAAG;IACD;IACA,MAAMnB,gBAAgB,GAAG,MAAMH,KAAK,CAACI,MAAM,CAACC,EAAE,CAAC,sCAAsC,CAAC;IACtF;IACA,MAAMC,EAAE,GAAG,MAAMH,gBAAgB,CAACI,OAAO,CAACgB,sBAAsB,EAAE,CAACd,IAAI,CAAC;MACtEC,MAAM,EAAEY,MAAM;MACdX,KAAK,EAAE;IACT,CAAC,CAAC;IACF,MAAML,EAAE,CAACM,YAAY,CAAC,CAAC,CAAC;EAE1B,CAAC,CAAC,OAAOQ,GAAG,EAAE;IACZ,MAAMA,GAAG;EACX;AACF,CAAC"},"metadata":{},"sourceType":"module"}